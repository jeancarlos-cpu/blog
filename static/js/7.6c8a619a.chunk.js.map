{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","components/input/input.component.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.component.jsx","pages/login-page/login-page.component.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","_defineProperty","obj","key","defineProperty","enumerable","configurable","writable","Input","props","StyledInput","styled","input","useState","initialState","state","setState","history","useHistory","client","useApolloClient","useMutation","LOGIN_USER","onCompleted","login","localStorage","setItem","token","writeData","data","isLoggedIn","goBack","onError","e","alert","message","loginUser","handleChange","event","target","name","className","onSubmit","email","password","preventDefault","variables","type","placeholder","required","gql","CREATE_USER","createUser","confirmPassword","action"],"mappings":"iGAGe,SAASA,EAAeC,EAAKC,GAC1C,OCJa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDGxB,CAAeA,IEJT,SAA+BA,EAAKC,GACjD,GAAMG,OAAOC,YAAYC,OAAON,IAAgD,uBAAxCM,OAAOC,UAAUC,SAASC,KAAKT,GAAvE,CAIA,IAAIU,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKhB,EAAII,OAAOC,cAAmBM,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAETnB,GAAKS,EAAKW,SAAWpB,GAH8CU,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFvBuB,CAAqBV,EAAKC,IGJ3C,WACb,MAAM,IAAIsB,UAAU,wDHG0C,GAJhE,mC,4GIAe,SAASC,EAAgBC,EAAKC,EAAKN,GAYhD,OAXIM,KAAOD,EACTnB,OAAOqB,eAAeF,EAAKC,EAAK,CAC9BN,MAAOA,EACPQ,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZL,EAAIC,GAAON,EAGNK,E,yLCTM,SAASM,EAAT,GAA8B,IAAVC,EAAS,kBAC1C,OAAO,kBAACC,EAAgBD,GAG1B,IAAMC,E,MAAcC,EAAOC,MAAV,K,yfCAF,iBAAO,IAAD,EACOC,mBAASC,GADhB,mBACZC,EADY,KACLC,EADK,KAEbC,EAAUC,cACVC,EAASC,cAHI,EAKCC,YAAYC,EAAY,CAC1CC,YAAa,YAAgB,IAAbC,EAAY,EAAZA,MACdC,aAAaC,QAAQ,QAASF,EAAMG,OACpCR,EAAOS,UAAU,CAAEC,KAAM,CAAEC,YAAY,KACvCd,EAASF,GACTG,EAAQc,UAEVC,QAAS,SAAAC,GAAC,OAAIC,MAAMD,EAAEE,YAPjBC,EALY,oBAqBbC,EAAe,SAAAC,GAAU,IAAD,EACJA,EAAMC,OAAtBC,EADoB,EACpBA,KAAM3C,EADc,EACdA,MACdmB,E,+VAAS,CAAD,GACHD,EADG,KAELyB,EAAO3C,MAIZ,OACE,yBAAK4C,UAAU,WACb,0DACA,0BAAMC,SAjBW,SAAAJ,GAAU,IACrBK,EAAoB5B,EAApB4B,MAAOC,EAAa7B,EAAb6B,SACfN,EAAMO,iBACNT,EAAU,CAAEU,UAAW,CAAEH,QAAOC,gBAe5B,kBAACpC,EAAD,CACEuC,KAAK,QACLP,KAAK,QACLQ,YAAY,SACZX,aAAcA,EACdY,UAAU,IAEZ,kBAACzC,EAAD,CACEuC,KAAK,WACLP,KAAK,WACLQ,YAAY,WACZX,aAAcA,EACdY,UAAU,IAEZ,8CAMFnC,EAAe,CACnB6B,MAAO,GACPC,SAAU,IAGCtB,EAAa4B,YAAH,K,4fC5DR,iBAAO,IAAD,EACOrC,mBAASC,GADhB,mBACZC,EADY,KACLC,EADK,KAEbG,EAASC,cAFI,EAGEC,YAAY8B,EAAa,CAC5C5B,YAAa,YAAqB,IAAlB6B,EAAiB,EAAjBA,WACd3B,aAAaC,QAAQ,QAAS0B,EAAWzB,OACzCR,EAAOS,UAAU,CAAEC,KAAM,CAAEC,YAAY,QAHpCsB,EAHY,oBAiBbf,EAAe,SAAAC,GAAU,IAAD,EACJA,EAAMC,OAAtBC,EADoB,EACpBA,KAAM3C,EADc,EACdA,MACdmB,E,+VAAS,IACJD,EADG,KAELyB,EAAO3C,MAIZ,OACE,yBAAK4C,UAAU,WACb,4DACA,0BAAMC,SAlBW,SAAAJ,GACnBA,EAAMO,iBADsB,IAEpBF,EAA2C5B,EAA3C4B,MAAOC,EAAoC7B,EAApC6B,SAAUS,EAA0BtC,EAA1BsC,gBAAiBb,EAASzB,EAATyB,KAC1C,GAAII,IAAaS,EAAiB,OAAOnB,MAAM,yBAC/CkB,EAAW,CAAEN,UAAW,CAAEN,OAAMG,QAAOC,eAcPU,OAAO,QACnC,kBAAC9C,EAAD,CACEuC,KAAK,OACLP,KAAK,OACLQ,YAAY,WACZX,aAAcA,EACdY,UAAU,IAEZ,kBAACzC,EAAD,CACEuC,KAAK,QACLP,KAAK,QACLQ,YAAY,SACZX,aAAcA,EACdY,UAAU,IAEZ,kBAACzC,EAAD,CACEuC,KAAK,WACLP,KAAK,WACLQ,YAAY,WACZX,aAAcA,EACdY,UAAU,IAEZ,kBAACzC,EAAD,CACEuC,KAAK,WACLP,KAAK,kBACLQ,YAAY,mBACZX,aAAcA,EACdY,UAAU,IAEZ,8CAMFnC,EAAe,CACnB0B,KAAM,GACNG,MAAO,GACPC,SAAU,GACVS,gBAAiB,IAGNF,EAAcD,YAAH,K,MCtET,qBACb,OACE,yBAAKT,UAAU,cACb,kBAAC,EAAD,MACA,kBAAC,EAAD","file":"static/js/7.6c8a619a.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function Input({ ...props }) {\r\n  return <StyledInput {...props} />;\r\n}\r\n\r\nconst StyledInput = styled.input`\r\n  margin: 10px;\r\n  padding: 8px 0;\r\n  border: 2px solid var(--secondary);\r\n  font-size: 20px;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport Input from \"../input/input.component\";\r\nimport \"./sign-in.styles.scss\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useMutation, useApolloClient } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default () => {\r\n  const [state, setState] = useState(initialState);\r\n  const history = useHistory();\r\n  const client = useApolloClient();\r\n\r\n  const [loginUser] = useMutation(LOGIN_USER, {\r\n    onCompleted: ({ login }) => {\r\n      localStorage.setItem(\"token\", login.token);\r\n      client.writeData({ data: { isLoggedIn: true } });\r\n      setState(initialState);\r\n      history.goBack();\r\n    },\r\n    onError: e => alert(e.message)\r\n  });\r\n\r\n  const handleSignIn = event => {\r\n    const { email, password } = state;\r\n    event.preventDefault();\r\n    loginUser({ variables: { email, password } });\r\n  };\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n    setState({\r\n      ...state,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"sign-in\">\r\n      <h2>I already have an account.</h2>\r\n      <form onSubmit={handleSignIn}>\r\n        <Input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"E-mail\"\r\n          handleChange={handleChange}\r\n          required={true}\r\n        />\r\n        <Input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          handleChange={handleChange}\r\n          required={true}\r\n        />\r\n        <button>Sign In</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst initialState = {\r\n  email: \"\",\r\n  password: \"\"\r\n};\r\n\r\nexport const LOGIN_USER = gql`\r\n  mutation loginUser($email: String!, $password: String!) {\r\n    login(data: { email: $email, password: $password }) {\r\n      user {\r\n        id\r\n      }\r\n      token\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport Input from \"../input/input.component\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useMutation, useApolloClient } from \"@apollo/react-hooks\";\r\n\r\nexport default () => {\r\n  const [state, setState] = useState(initialState);\r\n  const client = useApolloClient();\r\n  const [createUser] = useMutation(CREATE_USER, {\r\n    onCompleted: ({ createUser }) => {\r\n      localStorage.setItem(\"token\", createUser.token);\r\n      client.writeData({ data: { isLoggedIn: true } });\r\n    }\r\n  });\r\n\r\n  const handleSignIn = event => {\r\n    event.preventDefault();\r\n    const { email, password, confirmPassword, name } = state;\r\n    if (password !== confirmPassword) return alert(\"passwords don't match\");\r\n    createUser({ variables: { name, email, password } });\r\n  };\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n    setState({\r\n      ...state,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"sign-in\">\r\n      <h2>I don't have an account yet.</h2>\r\n      <form onSubmit={handleSignIn} action=\"post\">\r\n        <Input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Username\"\r\n          handleChange={handleChange}\r\n          required={true}\r\n        />\r\n        <Input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"E-mail\"\r\n          handleChange={handleChange}\r\n          required={true}\r\n        />\r\n        <Input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          handleChange={handleChange}\r\n          required={true}\r\n        />\r\n        <Input\r\n          type=\"password\"\r\n          name=\"confirmPassword\"\r\n          placeholder=\"Comfirm password\"\r\n          handleChange={handleChange}\r\n          required={true}\r\n        />\r\n        <button>Sign Up</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  confirmPassword: \"\"\r\n};\r\n\r\nexport const CREATE_USER = gql`\r\n  mutation createUser($name: String!, $email: String!, $password: String!) {\r\n    createUser(data: { name: $name, email: $email, password: $password }) {\r\n      user {\r\n        id\r\n      }\r\n      token\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport SignIn from \"../../components/sign-in/sign-in.component\";\r\nimport SignUp from \"../../components/sign-up/sign-up.component\";\r\nimport './login-page.styles.scss'\r\n\r\nexport default () => {\r\n  return (\r\n    <div className='login-page'>\r\n      <SignIn />\r\n      <SignUp />\r\n    </div>\r\n  );\r\n};\r\n"],"sourceRoot":""}