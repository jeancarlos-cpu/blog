{"version":3,"sources":["utils/firstLettersToUpperCase.js","components/buttom/buttom.component.jsx","components/posts/posts.component.jsx","components/comments/comments.component.jsx","components/users/users.component.jsx","pages/home-page/home-page.component.jsx"],"names":["string","toLowerCase","split","reduce","acc","word","charAt","toUpperCase","slice","children","props","StyledButton","styled","button","inverted","data","loading","error","handleLoadMore","hasMorePosts","history","useHistory","className","posts","map","post","key","id","onClick","push","title","fromNow","createdAt","body","author","toUpper","name","style","display","div","Moment","CommentsContainer","Header","comments","comment","index","CommentCointainer","text","StyledDate","h1","useQuery","GET_USERS","variables","orderBy","first","users","user","src","profilePicture","alt","firstToUpperCase","commentsQuery","GET_COMMENTS","postsQuery","GET_POSTS","useState","sethasMorePosts","fetchMore","skip","length","updateQuery","prev","fetchMoreResult"],"mappings":"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","file":"static/js/4.2740cab4.chunk.js","sourcesContent":["export default (string) =>\r\n  string\r\n    .toLowerCase()\r\n    .split(\" \")\r\n    .reduce((acc, word) => `${acc} ${word.charAt(0).toUpperCase() + word.slice(1)}`,\"\");\r\n\r\n\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default ({ children, ...props }) => {\r\n  return <StyledButton {...props}>{children}</StyledButton>;\r\n};\r\n\r\nconst StyledButton = styled.button`\r\n  border-radius: 10px;\r\n  border: 0px;\r\n  margin: 0px auto;\r\n  padding: 8px 2em;\r\n  background: ${props => (props.inverted ? \"white\" : \"#3da9fc\")};\r\n  border: ${props => (props.inverted ? \"solid 2px #3da9fc\" : null)};\r\n  color: ${props => (props.inverted ? \"#3da9fc\" : \"white\")};\r\n  transition: transform 0.2s;\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Loading from \"../loading/loading\";\r\nimport Buttom from \"../buttom/buttom.component\";\r\nimport Moment from \"react-moment\";\r\nimport toUpper from \"../../utils/firstLettersToUpperCase\";\r\nimport styled from \"styled-components\";\r\nimport \"./posts.styles.scss\";\r\n\r\nexport default ({ data, loading, error, handleLoadMore, hasMorePosts }) => {\r\n  if (loading) return <Loading />;\r\n  if (error) return \"Error :(\";\r\n\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"posts-container\">\r\n      {data.posts.map(post => (\r\n        <div className=\"post-container\" key={post.id}>\r\n          <div className=\"post-title\">\r\n            <div\r\n              className=\"title\"\r\n              onClick={() => history.push(`/post/${post.id}`)}\r\n            >\r\n              {post.title}\r\n            </div>\r\n            <div className=\"date\">\r\n              <Moment fromNow>{post.createdAt}</Moment>\r\n            </div>\r\n          </div>\r\n          <div className=\"post-body\">{post.body.slice(0, 350) + \"...\"}</div>\r\n          <div className=\"post-footer\">\r\n            Author:{\" \"}\r\n            <span onClick={() => history.push(`/profile/${post.author.id}`)}>\r\n              {toUpper(post.author.name)}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      <Buttom\r\n        onClick={handleLoadMore}\r\n        style={!hasMorePosts ? { display: \"none\" } : null}\r\n      >\r\n        Load more\r\n      </Buttom>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PostsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: var(--background2);\r\n  border-radius: 10px;\r\n  padding: 10px 0;\r\n  overflow-y: scroll;\r\n  max-height: 80vh;\r\n`;\r\n\r\nconst PostContainer = styled.div`\r\n  background: var(--background1);\r\n  border-radius: 5px;\r\n  margin: 0 15px 15px 15px;\r\n  padding: 10px;\r\n  vertical-align: center;\r\n`;\r\n\r\nconst PostHeader = styled.div`\r\n  font-size: 40px;\r\n  color: var(--stroke);\r\n  font-weight: 600;\r\n  background: var(--background);\r\n  font-size: 22px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  .title {\r\n    &:hover {\r\n      cursor: pointer;\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n  .date {\r\n    font-size: 15px;\r\n    color: var(--paragraphy);\r\n  }\r\n`;\r\n\r\nconst styledMoment = styled(Moment)`\r\n  font-size: 15px;\r\n  color: var(--paragraphy);\r\n`;\r\n","import React from \"react\";\r\nimport Loading from \"../loading/loading\";\r\nimport Moment from \"react-moment\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport toUpper from \"../../utils/firstLettersToUpperCase\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default ({ loading, error, data }) => {\r\n  if (error) return \"Error :(\";\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <CommentsContainer>\r\n      <Header>Last Comments</Header>\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        data.comments.map((comment, index) => (\r\n          <CommentCointainer\r\n            onClick={() => history.push(`/profile/${comment.author.id}`)}\r\n            className=\"comment-container\"\r\n            key={index}\r\n          >\r\n            <div>{comment.text}</div>\r\n            <StyledDate>\r\n              <div>{toUpper(comment.author.name)}</div>\r\n              <div>\r\n                <Moment fromNow>{comment.createdAt}</Moment>\r\n              </div>\r\n            </StyledDate>\r\n          </CommentCointainer>\r\n        ))\r\n      )}\r\n    </CommentsContainer>\r\n  );\r\n};\r\n\r\nconst CommentsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0 10px 15px 10px;\r\n  border-radius: 10px;\r\n  background: var(--background2);\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Header = styled.h1`\r\n  margin: 5px;\r\n  font-size: 1.3em;\r\n  text-align: center;\r\n  color: var(--stroke);\r\n`;\r\n\r\nconst CommentCointainer = styled.div`\r\n  border-radius: 10px;\r\n  margin: 5px 10px;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  flex-direction: column;\r\n  font-size: 18px;\r\n  border-radius: 5px;\r\n  background-color: var(--background1);\r\n  padding: 4px;\r\n  overflow-wrap: break-word;\r\n`;\r\n\r\nconst StyledDate = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  font-size: 12px;\r\n`;\r\n","import React from \"react\";\r\nimport Loading from \"../loading/loading\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Moment from \"react-moment\";\r\nimport \"moment-timezone\";\r\nimport firstToUpperCase from \"../../utils/firstLettersToUpperCase\";\r\nimport \"./users.styles.scss\";\r\nimport { GET_USERS } from \"../../graphql/queries\";\r\n\r\nexport default () => {\r\n  const history = useHistory();\r\n  const { data, error, loading } = useQuery(GET_USERS, {\r\n    variables: { orderBy: \"createdAt_DESC\", first: 3 }\r\n  });\r\n  if (error) return \"Error :(\";\r\n  return (\r\n    <div className=\"users-container\">\r\n      <h1>New Users</h1>\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        data.users.map(user => (\r\n          <div\r\n            className=\"user-container\"\r\n            key={user.id}\r\n            onClick={() => history.push(`profile/${user.id}`)}\r\n          >\r\n            <div className=\"userimg\">\r\n              <img src={user.profilePicture} alt=\"\" />\r\n            </div>\r\n            <div className=\"profile\">\r\n              <h1 className=\"name\">{firstToUpperCase(user.name)}</h1>\r\n              <span>\r\n                <Moment fromNow>{user.createdAt}</Moment>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport UsersCard from \"../../components/users/users.component\";\r\nimport Posts from \"../../components/posts/posts.component\";\r\nimport Comments from \"../../components/comments/comments.component\";\r\nimport \"./homepage.styles.scss\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { GET_COMMENTS, GET_POSTS } from \"../../graphql/queries\";\r\n\r\nexport default () => {\r\n  const commentsQuery = useQuery(GET_COMMENTS, {\r\n    variables: { orderBy: \"createdAt_DESC\", first: 5 }\r\n  });\r\n\r\n  const postsQuery = useQuery(GET_POSTS, {\r\n    variables: { orderBy: \"createdAt_DESC\", first: 6 }\r\n  });\r\n\r\n  const [hasMorePosts, sethasMorePosts] = useState(true);\r\n\r\n  const handleLoadMore = () => {\r\n    postsQuery.fetchMore({\r\n      variables: {\r\n        skip: postsQuery.data.posts.length,\r\n        first: 3\r\n      },\r\n      updateQuery: (prev, { fetchMoreResult }) => {\r\n        if (!fetchMoreResult.posts.length) {\r\n          sethasMorePosts(false);\r\n          return prev;\r\n        }\r\n        return {\r\n          posts: [...prev.posts, ...fetchMoreResult.posts]\r\n        };\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"homepage-grid\">\r\n        <div className=\"users-grid\">\r\n          <UsersCard />\r\n        </div>\r\n        <div className=\"comments-grid\">\r\n          <Comments\r\n            data={commentsQuery.data}\r\n            loading={commentsQuery.loading}\r\n            error={commentsQuery.error}\r\n          />\r\n        </div>\r\n        <div className=\"posts-grid\">\r\n          <Posts\r\n            data={postsQuery.data}\r\n            loading={postsQuery.loading}\r\n            error={postsQuery.error}\r\n            hasMorePosts={hasMorePosts}\r\n            handleLoadMore={handleLoadMore}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n"],"sourceRoot":""}