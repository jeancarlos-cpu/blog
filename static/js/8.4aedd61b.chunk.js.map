{"version":3,"sources":["utils/firstLettersToUpperCase.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","pages/post-page/post-page.component.jsx"],"names":["string","toLowerCase","split","reduce","acc","word","charAt","toUpperCase","slice","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","CREATE_COMMENT","gql","isLoggedIn","postId","useParams","history","useHistory","useState","text","setText","useMutation","createComment","useQuery","GET_POST_BY_ID","variables","id","data","loading","error","post","handleClick","_","author","className","title","src","profilePicture","alt","onClick","toUpper","name","fromNow","createdAt","body","action","onSubmit","e","preventDefault","type","maxLength","onChange","target","required","placeholder","rows","autoFocus","comments","map","comment","key"],"mappings":"iGAAe,aAACA,GAAD,OACbA,EACGC,cACAC,MAAM,KACNC,QAAO,SAACC,EAAKC,GAAN,gBAAkBD,EAAlB,YAAyBC,EAAKC,OAAO,GAAGC,cAAgBF,EAAKG,MAAM,MAAK,M,gCCDrE,SAASC,EAAeC,EAAKC,GAC1C,OCJa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDGxB,CAAeA,IEJT,SAA+BA,EAAKC,GACjD,GAAMG,OAAOC,YAAYC,OAAON,IAAgD,uBAAxCM,OAAOC,UAAUC,SAASC,KAAKT,GAAvE,CAIA,IAAIU,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKhB,EAAII,OAAOC,cAAmBM,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAETnB,GAAKS,EAAKW,SAAWpB,GAH8CU,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFvBuB,CAAqBV,EAAKC,IGJ3C,WACb,MAAM,IAAIsB,UAAU,wDHG0C,GAJhE,mC,8XIWA,IAAMC,EAAiBC,YAAH,KASL,sBAAoB,EAAjBC,WAAkB,IAC1BC,EAAWC,cAAXD,OACFE,EAAUC,cAFiB,EAGTC,mBAAS,IAHA,mBAG1BC,EAH0B,KAGpBC,EAHoB,OAITC,YAAYV,GAA7BW,EAJ0B,sBAKAC,YAASC,IAAgB,CACxDC,UAAW,CACTC,GAAIZ,KAFAa,EALyB,EAKzBA,KAAMC,EALmB,EAKnBA,QAASC,EALU,EAKVA,MAMvB,GAAID,EAAS,OAAO,kBAAC,IAAD,MACpB,GAAIC,EAAO,OAAO,yCAZe,IAazBC,EAASH,EAATG,KAEFC,EAAc,SAAAC,GAClBhB,EAAQV,KAAR,mBAAyBwB,EAAKG,OAAOP,MASvC,OACE,yBAAKQ,UAAU,uBACb,wBAAIA,UAAU,SAASJ,EAAKK,OAC5B,yBAAKD,UAAU,UACb,yBAAKE,IAAKN,EAAKG,OAAOI,eAAgBC,IAAI,GAAGC,QAASR,IACtD,6BACE,wBAAIQ,QAASR,GAAcS,YAAQV,EAAKG,OAAOQ,OAC/C,4BACE,kBAAC,IAAD,CAAQC,SAAO,GAAEZ,EAAKa,cAI5B,6BACA,uBAAGT,UAAU,QAAQJ,EAAKc,MAC1B,6BACA,0BAAMC,OAAO,GAAGC,SArBC,SAAAC,GACnBA,EAAEC,iBAEF1B,EAAc,CAAEG,UAAW,CAAEN,OAAMO,GAAII,EAAKJ,QAmBxC,kDACA,8BACEQ,UAAU,gBACVe,KAAK,OACLC,UAAU,MACVC,SAAU,gBAAa5C,EAAb,EAAG6C,OAAU7C,MAAb,OAA2Ba,EAAQb,IAC7C8C,UAAU,EACVC,YAAY,aACZC,KAAM,IACNC,WAAS,IAEX,iDAEF,6BACA,yBAAKtB,UAAU,2BACb,wBAAIA,UAAU,SAAd,YACCJ,EAAK2B,SAASC,KAAI,SAAAC,GAAO,OACxB,yBAAKzB,UAAU,yBAAyB0B,IAAKD,EAAQjC,IACnD,yBAAKQ,UAAU,aACb,yBAAKE,IAAKuB,EAAQ1B,OAAOI,eAAgBC,IAAI,KAC7C,8BAAOqB,EAAQ1B,OAAOQ,OAExB,yBAAKP,UAAU,UACb,2BAAIyB,EAAQxC,MACZ,kBAAC,IAAD,CAAQe,UAAU,aAAaQ,SAAO,GACnCiB,EAAQhB","file":"static/js/8.4aedd61b.chunk.js","sourcesContent":["export default (string) =>\r\n  string\r\n    .toLowerCase()\r\n    .split(\" \")\r\n    .reduce((acc, word) => `${acc} ${word.charAt(0).toUpperCase() + word.slice(1)}`,\"\");\r\n\r\n\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React, { useState } from \"react\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Loading from \"../../components/loading/loading\";\r\nimport \"./post-page.styles.scss\";\r\nimport Moment from \"react-moment\";\r\nimport toUpper from \"../../utils/firstLettersToUpperCase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { GET_POST_BY_ID } from \"../../graphql/queries\";\r\n\r\nconst CREATE_COMMENT = gql`\r\n  mutation createComment($text: String!, $id: ID!) {\r\n    createComment(data: { text: $text, post: $id }) {\r\n      id\r\n      text\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ({ isLoggedIn }) => {\r\n  const { postId } = useParams();\r\n  const history = useHistory();\r\n  const [text, setText] = useState(\"\");\r\n  const [createComment] = useMutation(CREATE_COMMENT);\r\n  const { data, loading, error } = useQuery(GET_POST_BY_ID, {\r\n    variables: {\r\n      id: postId\r\n    }\r\n  });\r\n\r\n  if (loading) return <Loading />;\r\n  if (error) return <div>error ;(</div>;\r\n  const { post } = data;\r\n\r\n  const handleClick = _ => {\r\n    history.push(`/profile/${post.author.id}`);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    // if (!isLoggedIn) return history.push(\"/login\");\r\n    createComment({ variables: { text, id: post.id } });\r\n  };\r\n\r\n  return (\r\n    <div className=\"post-page-container\">\r\n      <h1 className=\"title\">{post.title}</h1>\r\n      <div className=\"author\">\r\n        <img src={post.author.profilePicture} alt=\"\" onClick={handleClick} />\r\n        <div>\r\n          <h2 onClick={handleClick}>{toUpper(post.author.name)}</h2>\r\n          <h3>\r\n            <Moment fromNow>{post.createdAt}</Moment>\r\n          </h3>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <p className=\"body\">{post.body}</p>\r\n      <hr />\r\n      <form action=\"\" onSubmit={handleSubmit}>\r\n        <h4>Leave us a comment</h4>\r\n        <textarea\r\n          className=\"comment-input\"\r\n          type=\"text\"\r\n          maxLength=\"200\"\r\n          onChange={({ target: { value } }) => setText(value)}\r\n          required={true}\r\n          placeholder=\"Comment...\"\r\n          rows={\"4\"}\r\n          autoFocus\r\n        />\r\n        <button>Send comment</button>\r\n      </form>\r\n      <hr />\r\n      <div className=\"post-comments-container\">\r\n        <h2 className=\"title\">Comments</h2>\r\n        {post.comments.map(comment => (\r\n          <div className=\"post-comment-container\" key={comment.id}>\r\n            <div className=\"profile-p\">\r\n              <img src={comment.author.profilePicture} alt=\"\" />\r\n              <span>{comment.author.name}</span>\r\n            </div>\r\n            <div className=\"text-p\">\r\n              <p>{comment.text}</p>\r\n              <Moment className=\"push-right\" fromNow>\r\n                {comment.createdAt}\r\n              </Moment>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"sourceRoot":""}